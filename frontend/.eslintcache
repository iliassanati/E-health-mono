[{"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\index.js":"1","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\App.js":"2","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\store.js":"3","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Header.js":"5","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\doctorReducers.js":"7","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientLoginScreen.js":"8","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientProfileScreen.js":"9","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorRegisterScreen.js":"10","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorProfileScreen.js":"11","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorSpaceScreen.js":"12","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientRegisterScreen.js":"13","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorPatientsScreen.js":"14","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorLoginScreen.js":"15","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\userActions.js":"16","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Loader.js":"17","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Message.js":"18","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\FormContainer.js":"19","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\doctorActions.js":"20","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\doctorConstants.js":"21","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Map.js":"23","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationInfoBox.js":"24","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationMarker.js":"25","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\HomeScreen.js":"26","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DoctorCard.js":"27","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DateTimePicker.js":"28","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\DoctorInfoScreen.js":"29","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\RdvScreen.js":"30","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PayementScreen.js":"31","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvReducers.js":"32","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvConstants.js":"33","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvActions.js":"34","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvInfoReducers.js":"35","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvInfoActions.js":"36","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvInfoConstants.js":"37","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PlaceOrderScreen.js":"39"},{"size":316,"mtime":1609694378984,"results":"40","hashOfConfig":"41"},{"size":2419,"mtime":1610146422739,"results":"42","hashOfConfig":"41"},{"size":2261,"mtime":1610144718611,"results":"43","hashOfConfig":"41"},{"size":336,"mtime":1609694378833,"results":"44","hashOfConfig":"41"},{"size":3388,"mtime":1610051846356,"results":"45","hashOfConfig":"41"},{"size":4155,"mtime":1609694379115,"results":"46","hashOfConfig":"41"},{"size":3653,"mtime":1609961848119,"results":"47","hashOfConfig":"41"},{"size":2537,"mtime":1609694379946,"results":"48","hashOfConfig":"41"},{"size":5005,"mtime":1609720255274,"results":"49","hashOfConfig":"41"},{"size":10731,"mtime":1609694379608,"results":"50","hashOfConfig":"41"},{"size":17487,"mtime":1610051359280,"results":"51","hashOfConfig":"41"},{"size":1701,"mtime":1610037565133,"results":"52","hashOfConfig":"41"},{"size":3935,"mtime":1609720080485,"results":"53","hashOfConfig":"41"},{"size":175,"mtime":1609694379417,"results":"54","hashOfConfig":"41"},{"size":2561,"mtime":1609965373674,"results":"55","hashOfConfig":"41"},{"size":6998,"mtime":1609720288078,"results":"56","hashOfConfig":"41"},{"size":410,"mtime":1609694378908,"results":"57","hashOfConfig":"41"},{"size":249,"mtime":1609694378941,"results":"58","hashOfConfig":"41"},{"size":352,"mtime":1609694378882,"results":"59","hashOfConfig":"41"},{"size":5488,"mtime":1609977468328,"results":"60","hashOfConfig":"41"},{"size":1443,"mtime":1609961565940,"results":"61","hashOfConfig":"41"},{"size":1567,"mtime":1609694378967,"results":"62","hashOfConfig":"41"},{"size":857,"mtime":1609762415475,"results":"63","hashOfConfig":"41"},{"size":417,"mtime":1609705079203,"results":"64","hashOfConfig":"41"},{"size":365,"mtime":1609762685576,"results":"65","hashOfConfig":"41"},{"size":1030,"mtime":1609959677915,"results":"66","hashOfConfig":"41"},{"size":915,"mtime":1609964574843,"results":"67","hashOfConfig":"41"},{"size":1023,"mtime":1609969516582,"results":"68","hashOfConfig":"41"},{"size":3239,"mtime":1610141689403,"results":"69","hashOfConfig":"41"},{"size":4051,"mtime":1610110192191,"results":"70","hashOfConfig":"41"},{"size":2044,"mtime":1610110305335,"results":"71","hashOfConfig":"41"},{"size":1133,"mtime":1610145835074,"results":"72","hashOfConfig":"41"},{"size":338,"mtime":1610144470078,"results":"73","hashOfConfig":"41"},{"size":1587,"mtime":1610146225503,"results":"74","hashOfConfig":"41"},{"size":811,"mtime":1610110821422,"results":"75","hashOfConfig":"41"},{"size":1054,"mtime":1610110789758,"results":"76","hashOfConfig":"41"},{"size":229,"mtime":1610110780784,"results":"77","hashOfConfig":"41"},{"size":3445,"mtime":1610146923759,"results":"78","hashOfConfig":"41"},{"size":4527,"mtime":1610146427866,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"x5p0m5",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\index.js",[],["166","167"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\App.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\store.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Header.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\doctorReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientLoginScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientProfileScreen.js",["168","169"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\nconst PatientProfileScreen = ({ location, history }) => {\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/patient/login');\r\n    } else {\r\n      if (!user.nom) {\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setNom(user.nom);\r\n        setPrenom(user.prenom);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({ id: user._id, nom, prenom, email, password })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {userInfo && <h1>Bonjour {userInfo.prenom} </h1>}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/rdv'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes rdvs</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/agenda'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon agenda</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='nom'>\r\n              <Form.Label>Nom </Form.Label>\r\n              <Form.Control\r\n                type='nom'\r\n                placeholder='Enter votre nom'\r\n                value={nom}\r\n                onChange={e => setNom(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='prenom'>\r\n              <Form.Label>Nom complet</Form.Label>\r\n              <Form.Control\r\n                type='prenom'\r\n                placeholder='Enter votre prénom'\r\n                value={prenom}\r\n                onChange={e => setPrenom(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientProfileScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorRegisterScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorProfileScreen.js",["170","171"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Row, Col, Nav, Button, Card } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getDoctorDetails,\r\n  updateDoctorProfile,\r\n} from '../../actions/doctorActions';\r\nimport axios from 'axios';\r\n\r\nimport Map from '../../components/Map';\r\n\r\nconst DoctorProfileScreen = ({ location, history }) => {\r\n  const [titre, setTitre] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [nom, setNom] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [specialite, setSpecialite] = useState('');\r\n  const [addressCabinet, setAddressCabinet] = useState('');\r\n  const [ville, setVille] = useState('');\r\n  const [phoneCabinet, setPhoneCabinet] = useState('');\r\n  const [phonePersonel, setPhonePersonel] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [prixConsultation, setPrixConsultation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [diplomesEtFormations, setDiplomesEtFormations] = useState('');\r\n  const [informationsPratiques, setInformationsPratiques] = useState('');\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorDetails = useSelector(state => state.doctorDetails);\r\n  const { loading, error, doctor } = doctorDetails;\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  const doctorUpdateProfile = useSelector(state => state.doctorUpdateProfile);\r\n  const { success } = doctorUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!doctorInfo) {\r\n      history.push('/doctor/login');\r\n    } else {\r\n      if (!doctor.nom) {\r\n        dispatch(getDoctorDetails('profile'));\r\n      } else {\r\n        setTitre(doctor.titre);\r\n        setPrenom(doctor.prenom);\r\n        setNom(doctor.nom);\r\n        setEmail(doctor.email);\r\n        setSpecialite(doctor.specialite);\r\n        setAddressCabinet(doctor.addressCabinet);\r\n        setVille(doctor.ville);\r\n        setPhoneCabinet(doctor.phoneCabinet);\r\n        setPhonePersonel(doctor.phonePersonel);\r\n        setImage(doctor.image);\r\n        setPrixConsultation(doctor.prixConsultation);\r\n        setDiplomesEtFormations(doctor.diplomesEtFormations);\r\n        setDescription(doctor.description);\r\n        setInformationsPratiques(doctor.informationsPratiques);\r\n      }\r\n    }\r\n  }, [dispatch, history, doctorInfo, doctor]);\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      dispatch(\r\n        updateDoctorProfile({\r\n          id: doctor._id,\r\n          titre,\r\n          nom,\r\n          prenom,\r\n          email,\r\n          password,\r\n          specialite,\r\n          addressCabinet,\r\n          ville,\r\n          phoneCabinet,\r\n          phonePersonel,\r\n          image,\r\n          prixConsultation,\r\n          diplomesEtFormations,\r\n          description,\r\n          informationsPratiques,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {doctorInfo && (\r\n            <h1>\r\n              Bonjour {doctorInfo.titre} {doctorInfo.nom}{' '}\r\n            </h1>\r\n          )}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/patients'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes patients</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/payment'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon agenda</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={3}>\r\n          {' '}\r\n          <Card className='my-3 p-3 rounded'>\r\n            <Card.Img\r\n              src={doctor.image}\r\n              variant='top'\r\n              className='image-profile'\r\n            />\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            <Card.Body>\r\n              <Card.Title as='div'>\r\n                <strong>\r\n                  {doctor.titre}\r\n                  {doctor.prenom}\r\n                  {doctor.nom}\r\n                </strong>\r\n              </Card.Title>\r\n              <Card.Text as='div'>\r\n                {/* <Rating value={product.rating} text={`$ reviews`} /> */}\r\n              </Card.Text>\r\n              <Card.Text as='h3'>{doctor.phone}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{message}</Message>\r\n        ) : (\r\n          <Col md={9}>\r\n            <h4>INFORMATIONS GENERALES ET COORDONNEES</h4>\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='titre'>\r\n                <Form.Label>Titre</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={titre}\r\n                  onChange={e => setTitre(e.target.value)}\r\n                >\r\n                  <option>Dr. </option>\r\n                  <option>Pr.</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='prenom'>\r\n                  <Form.Label>Prenom</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    value={prenom}\r\n                    onChange={e => {\r\n                      setPrenom(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='nom'>\r\n                  <Form.Label>Nom</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    value={nom}\r\n                    onChange={e => {\r\n                      setNom(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Adresse Email</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  value={email}\r\n                  onChange={e => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <hr />\r\n              <Form.Group controlId='specialite'>\r\n                <Form.Label>Specialite</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={specialite}\r\n                  onChange={e => {\r\n                    setSpecialite(e.target.value);\r\n                  }}\r\n                >\r\n                  <option>Choisissez votre specialité</option>\r\n                  <option>Orthodontiste</option>\r\n                  <option>Psychiatre</option>\r\n                  <option>Cardiologue</option>\r\n                  <option>Chirurgien digestif - viscéral</option>\r\n                  <option>Opticien</option>\r\n                  <option>Gastrologue</option>\r\n                  <option>entérologue</option>\r\n                  <option>Chirurgien général</option>\r\n                  <option>Chirurgien dentiste</option>\r\n                  <option>Kinésithérapeute</option>\r\n                  <option>Urologue et chirurgien urologue</option>\r\n                  <option>Oto-rhino-laryngologue</option>\r\n                  <option>Endocrinologue - maladies métaboliques</option>\r\n                  <option>Ophtalmologue</option>\r\n                  <option>Médecin Ostéopathe</option>\r\n                  <option>Gériatre</option>\r\n                  <option>Chirurgien esthétique</option>\r\n                  <option>Dermatologue</option>\r\n                  <option>Pédiatre</option>\r\n                  <option>Gynécologue obstétricien</option>\r\n                  <option>Anatomo-pathologiste</option>\r\n                  <option>Rhumatologue</option>\r\n                  <option>Orthophoniste</option>\r\n                  <option>Médecin généraliste</option>\r\n                  <option>Psychologue</option>\r\n                  <option>Nutritionniste</option>\r\n                  <option>Médecin interne</option>\r\n                  <option>Infirmier</option>\r\n                  <option>Chirurgien cardio-vasculaire</option>\r\n                  <option>Pneumologue</option>\r\n                  <option>Neurochirurgien</option>\r\n                  <option>Chirurgien orthopédiste et traumatologue</option>\r\n                  <option>Neuropsychiatre</option>\r\n                  <option>Génétique médicale</option>\r\n                  <option>Sexologue</option>\r\n                  <option>Neurologue</option>\r\n                  <option>Médecin biologiste</option>\r\n                  <option>Stomatologue et chirurgien maxillo-faciale</option>\r\n                  <option>Gynécologue sexologue</option>\r\n                  <option>Cancérologue</option>\r\n                  <option>Algologue</option>\r\n                  <option>Chirurgien réparateur et plastique</option>\r\n                  <option>Allergologue</option>\r\n                  <option>Médecin sportif</option>\r\n                  <option>Néphrologue</option>\r\n                  <option>Chirurgien pédiatre</option>\r\n                  <option>\r\n                    Médecin physique et réadaptation fonctionnelle\r\n                  </option>\r\n                  <option>Gérontologue</option>\r\n                  <option>Podologue</option>\r\n                  <option>Chirurgien hépato-biliaire et digestive</option>\r\n                  <option>Oncologue médicale</option>\r\n                  <option>Médecin légal et de travail</option>\r\n                  <option>Pédodontiste</option>\r\n                  <option>Acupuncteur</option>\r\n                  <option>Radiothérapeute</option>\r\n                  <option>Angiologue</option>\r\n                  <option>Médecin morphologique et anti-âge</option>\r\n                  <option>Diététicien</option>\r\n                  <option>Radiologue</option>\r\n                  <option>Psychomotricité</option>\r\n                  <option>Chirurgien cancérologue</option>\r\n                  <option>Anesthésiste-réanimateur</option>\r\n                  <option>Médecine nucléaire</option>\r\n                  <option>Homéopathe</option>\r\n                  <option>Orthopédiste dento-faciale</option>\r\n                  <option>Pharmacologue</option>\r\n                  <option>Parodontologue</option>\r\n                  <option>infectiologue</option>\r\n                  <option>Odontologue chirurgicale</option>\r\n                  <option>Chirurgien thoracique</option>\r\n                  <option>Biologiste vétérinaire</option>\r\n                  <option>Réanimateur</option>\r\n                  <option>Médecin urgentiste</option>\r\n                  <option>Autre</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='AddressCabinet'>\r\n                  <Form.Label>Numero et rue du cabinet</Form.Label>\r\n                  <Form.Control\r\n                    value={addressCabinet}\r\n                    onChange={e => {\r\n                      setAddressCabinet(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='city'>\r\n                  <Form.Label>Ville</Form.Label>\r\n                  <Form.Control\r\n                    value={ville}\r\n                    onChange={e => {\r\n                      setVille(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              {/* <Map doctor={doctor} /> */}\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='phoneCabinet'>\r\n                  <Form.Label>Numéro de Téléphone (cabinet)</Form.Label>\r\n                  <Form.Control\r\n                    value={phoneCabinet}\r\n                    onChange={e => {\r\n                      setPhoneCabinet(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='phonePersonel'>\r\n                  <Form.Label>Phone personnel</Form.Label>\r\n                  <Form.Control\r\n                    value={phonePersonel}\r\n                    onChange={e => {\r\n                      setPhonePersonel(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md='12' controlId='prixConsultation'>\r\n                  <Form.Label>Prix de la consultation</Form.Label>\r\n                  <Form.Control\r\n                    value={prixConsultation}\r\n                    onChange={e => {\r\n                      setPrixConsultation(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='12' controlId='diplomesEtFormations'>\r\n                  <Form.Label>Diplomes et formations</Form.Label>\r\n                  <Form.Control\r\n                    value={diplomesEtFormations}\r\n                    onChange={e => {\r\n                      setDiplomesEtFormations(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n\r\n                  <Form.Group as={Col} md='12' controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      rows={3}\r\n                      value={description}\r\n                      onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md='12'\r\n                    controlId='informationsPratiques'\r\n                  >\r\n                    <Form.Label>Informations pratiques</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      rows={3}\r\n                      value={informationsPratiques}\r\n                      onChange={e => setInformationsPratiques(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <hr />\r\n\r\n              <h4>CONFIDENTIALITE</h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='password'>\r\n                  <Form.Label>Mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter votre mot de passe'\r\n                    value={password}\r\n                    onChange={e => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='confirmPassword'>\r\n                  <Form.Label>Confirmer mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirmer votre mot de passe'\r\n                    value={confirmPassword}\r\n                    onChange={e => {\r\n                      setConfirmPassword(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <hr />\r\n              <Button type='submit' variant='primary'>\r\n                Enregister les modifications\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorProfileScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorSpaceScreen.js",["172","173","174","175","176","177","178","179","180","181"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Row, Col, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst DoctorSpaceScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  const doctorDetails = useSelector(state => state.doctorDetails);\r\n  const { loading, error, doctor } = doctorDetails;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {doctorInfo && (\r\n            <h1>\r\n              Bonjour {doctorInfo.titre} {doctorInfo.nom}{' '}\r\n            </h1>\r\n          )}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/patients'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes patients</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/payment'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon agenda</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorSpaceScreen;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\patient\\PatientRegisterScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorPatientsScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\doctor\\DoctorLoginScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Message.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\doctorActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\doctorConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\Map.js",["182","183","184"],"import React, { useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport LocationMarker from './LocationMarker';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nconst Map = ({ center, zoom, doctor }) => {\r\n  const [locationInfo, setLocationInfo] = useState(null);\r\n\r\n  const doctorLat = doctor.location.coordinates[1];\r\n  const doctorLng = doctor.location.coordinates[0];\r\n\r\n  return (\r\n    <div className='map'>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: 'AIzaSyD9yHl3vgj69oEh9DN35jPPtc0bhksyK5A' }}\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        <LocationMarker lat={doctorLat} lng={doctorLng}></LocationMarker>\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n};\r\n\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 33.5731,\r\n    lng: -7.5898,\r\n  },\r\n  zoom: 10,\r\n};\r\n\r\nexport default Map;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationInfoBox.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\LocationMarker.js",["185"],"import React from 'react';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport mapPin from '@iconify-icons/fa-solid/map-pin';\r\n\r\nconst LocationMarker = ({ lat, lng, onClick }) => {\r\n  return (\r\n    <div className='location-marker' onClick={onClick}>\r\n      <Icon icon={mapPin} className='map-pin' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DoctorCard.js",["186","187"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Form, Row, Col } from 'react-bootstrap';\r\n\r\nconst DoctorCard = ({ doctor }) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Card className='my-3 p-3 rounded'>\r\n          <Link to={`/doctor/${doctor._id}`}>\r\n            <Card.Img src={doctor.image} variant='top' />\r\n            <Card.Body>\r\n              <Card.Title as='div'>\r\n                <strong>\r\n                  {doctor.titre} {doctor.prenom} {doctor.nom}\r\n                </strong>\r\n              </Card.Title>\r\n\r\n              <Card.Text as='div'>\r\n                {/* <Rating value={product.rating} text={`$ reviews`} /> */}\r\n              </Card.Text>\r\n              <Card.Text as='h6'>{doctor.phoneCabinet}</Card.Text>\r\n            </Card.Body>\r\n          </Link>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\components\\DateTimePicker.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\DoctorInfoScreen.js",["188","189","190"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Figure } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDoctorInfo } from '../actions/doctorActions';\r\nimport DayTimePicker from '@mooncake-dev/react-day-time-picker';\r\nimport { saveDate } from '../actions/rdvInfoActions';\r\n\r\nconst DoctorInfoScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorInfoById = useSelector(state => state.doctorInfoById);\r\n\r\n  const { loading, doctor, error } = doctorInfoById;\r\n\r\n  useEffect(() => {\r\n    dispatch(getDoctorInfo(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const handleScheduled = date => {\r\n    dispatch(saveDate(date));\r\n    history.push(`/patient/login?redirect=/rdvinfo`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Revenir à la page précedante\r\n      </Link>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Figure>\r\n            <Figure.Image\r\n              width={342}\r\n              height={360}\r\n              alt='171x180'\r\n              src={doctor.image}\r\n            />\r\n            <Figure.Caption>\r\n              Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n            </Figure.Caption>\r\n          </Figure>\r\n        </Col>\r\n        <Col>\r\n          <DayTimePicker timeSlotSizeMinutes={30} onConfirm={handleScheduled} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={5}></Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorInfoScreen;\r\n\r\n// <Accordion defaultActiveKey=''>\r\n// <Card>\r\n//   <Accordion.Toggle as={Card.Header} eventKey='0'>\r\n//     Adresse\r\n//   </Accordion.Toggle>\r\n//   <Accordion.Collapse eventKey='0'>\r\n//     <Card.Body>{doctor.addressCabinet}</Card.Body>\r\n//   </Accordion.Collapse>\r\n// </Card>\r\n// <Card>\r\n//   <Accordion.Toggle as={Card.Header} eventKey='1'>\r\n//     Modes de reglements\r\n//   </Accordion.Toggle>\r\n//   <Accordion.Collapse eventKey='1'>\r\n//     <Card.Body>Hello! I'm another body</Card.Body>\r\n//   </Accordion.Collapse>\r\n// </Card>\r\n// <Card>\r\n//   <Accordion.Toggle as={Card.Header} eventKey='2'>\r\n//     Specialites\r\n//   </Accordion.Toggle>\r\n//   <Accordion.Collapse eventKey='2'>\r\n//     <Card.Body>\r\n//       {' '}\r\n//       <Badge pill variant='info'>\r\n//         {doctor.specialite}\r\n//       </Badge>\r\n//     </Card.Body>\r\n//   </Accordion.Collapse>\r\n// </Card>\r\n// <Card>\r\n//   <Accordion.Toggle as={Card.Header} eventKey='3'>\r\n//     Geolocalisation\r\n//   </Accordion.Toggle>\r\n//   <Accordion.Collapse eventKey='3'>\r\n//     <Card.Body>Hello! I'm another body</Card.Body>\r\n//   </Accordion.Collapse>\r\n// </Card>\r\n// <Card>\r\n//   <Accordion.Toggle as={Card.Header} eventKey='4'>\r\n//     Presentation de cabinet\r\n//   </Accordion.Toggle>\r\n//   <Accordion.Collapse eventKey='4'>\r\n//     <Card.Body>Hello! I'm another body</Card.Body>\r\n//   </Accordion.Collapse>\r\n// </Card>\r\n// <Card>\r\n//   <Accordion.Toggle as={Card.Header} eventKey='5'>\r\n//     Diplomes et formations\r\n//   </Accordion.Toggle>\r\n//   <Accordion.Collapse eventKey='5'>\r\n//     <Card.Body>Hello! I'm another body</Card.Body>\r\n//   </Accordion.Collapse>\r\n// </Card>\r\n// </Accordion>\r\n//\r\n","C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\RdvScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PayementScreen.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\reducers\\rdvInfoReducers.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\actions\\rdvInfoActions.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\constants\\rdvInfoConstants.js",[],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\OrderScreen.js",["191","192"],"C:\\Users\\lenovo\\Documents\\Dev\\e-health-monolithique\\frontend\\src\\screens\\PlaceOrderScreen.js",["193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":2,"column":34,"nodeType":"200","messageId":"201","endLine":2,"endColumn":39},{"ruleId":"198","severity":1,"message":"202","line":8,"column":10,"nodeType":"200","messageId":"201","endLine":8,"endColumn":35},{"ruleId":"198","severity":1,"message":"203","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":14},{"ruleId":"198","severity":1,"message":"204","line":14,"column":8,"nodeType":"200","messageId":"201","endLine":14,"endColumn":11},{"ruleId":"198","severity":1,"message":"203","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"205","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"206","line":4,"column":16,"nodeType":"200","messageId":"201","endLine":4,"endColumn":22},{"ruleId":"198","severity":1,"message":"207","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":15},{"ruleId":"198","severity":1,"message":"208","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":14},{"ruleId":"198","severity":1,"message":"209","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":21},{"ruleId":"198","severity":1,"message":"210","line":11,"column":9,"nodeType":"200","messageId":"201","endLine":11,"endColumn":17},{"ruleId":"198","severity":1,"message":"211","line":17,"column":11,"nodeType":"200","messageId":"201","endLine":17,"endColumn":18},{"ruleId":"198","severity":1,"message":"212","line":17,"column":20,"nodeType":"200","messageId":"201","endLine":17,"endColumn":25},{"ruleId":"198","severity":1,"message":"213","line":17,"column":27,"nodeType":"200","messageId":"201","endLine":17,"endColumn":33},{"ruleId":"198","severity":1,"message":"214","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":23},{"ruleId":"198","severity":1,"message":"215","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":22},{"ruleId":"198","severity":1,"message":"216","line":7,"column":24,"nodeType":"200","messageId":"201","endLine":7,"endColumn":39},{"ruleId":"198","severity":1,"message":"217","line":2,"column":16,"nodeType":"200","messageId":"201","endLine":2,"endColumn":26},{"ruleId":"198","severity":1,"message":"218","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"205","line":3,"column":16,"nodeType":"200","messageId":"201","endLine":3,"endColumn":20},{"ruleId":"198","severity":1,"message":"218","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"211","line":14,"column":11,"nodeType":"200","messageId":"201","endLine":14,"endColumn":18},{"ruleId":"198","severity":1,"message":"212","line":14,"column":28,"nodeType":"200","messageId":"201","endLine":14,"endColumn":33},{"ruleId":"198","severity":1,"message":"219","line":3,"column":39,"nodeType":"200","messageId":"201","endLine":3,"endColumn":44},{"ruleId":"198","severity":1,"message":"211","line":12,"column":11,"nodeType":"200","messageId":"201","endLine":12,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":32,"column":6,"nodeType":"222","endLine":32,"endColumn":24,"suggestions":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'Map' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'FormContainer' is defined but never used.","'dispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'doctor' is assigned a value but never used.","'LocationInfoBox' is defined but never used.","'locationInfo' is assigned a value but never used.","'setLocationInfo' is assigned a value but never used.","'InlineIcon' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rdv._id'. Either include it or remove the dependency array.","ArrayExpression",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Update the dependencies array to be: [history, rdv._id, success]",{"range":"229","text":"230"},[959,977],"[history, rdv._id, success]"]