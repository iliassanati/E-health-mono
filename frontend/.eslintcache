[{"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\index.js":"1","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\App.js":"2","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\store.js":"3","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Footer.js":"4","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Header.js":"5","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\DoctorInfoScreen.js":"6","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\PayementScreen.js":"7","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\RdvScreen.js":"8","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\PlaceOrderScreen.js":"9","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\HomeScreen.js":"10","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientRegisterScreen.js":"11","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\OrderScreen.js":"12","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientRdvScreen.js":"13","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientLoginScreen.js":"14","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientProfileScreen.js":"15","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorLoginScreen.js":"16","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorSpaceScreen.js":"17","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorRegisterScreen.js":"18","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorPatientsScreen.js":"19","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorRdvScreen.js":"20","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorProfileScreen.js":"21","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\rdvReducers.js":"22","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\doctorReducers.js":"23","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\rdvInfoReducers.js":"24","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\userReducers.js":"25","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Loader.js":"26","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Message.js":"27","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\CheckoutSteps.js":"28","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\DoctorCard.js":"29","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\LocationMarker.js":"30","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\FormContainer.js":"31","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\rdvInfoActions.js":"32","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\doctorActions.js":"33","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\userActions.js":"34","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\rdvActions.js":"35","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\rdvInfoConstants.js":"36","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\doctorConstants.js":"37","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\rdvConstants.js":"38","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\userConstants.js":"39","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\search.js":"40","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Search.js":"41","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Home.js":"42","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Header_home.js":"43","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Navbar.js":"44","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\FeatureItem.js":"45","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\contact.js":"46","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\services.js":"47","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\apropos.js":"48","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Apropos.js":"49","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Contact.js":"50","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Services.js":"51","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\FooterNav.js":"52"},{"size":330,"mtime":1610815065651,"results":"53","hashOfConfig":"54"},{"size":3224,"mtime":1611010463284,"results":"55","hashOfConfig":"54"},{"size":2504,"mtime":1610815065687,"results":"56","hashOfConfig":"54"},{"size":1079,"mtime":1611093647154,"results":"57","hashOfConfig":"54"},{"size":3452,"mtime":1611006693533,"results":"58","hashOfConfig":"54"},{"size":2563,"mtime":1611144210105,"results":"59","hashOfConfig":"54"},{"size":2286,"mtime":1610815065665,"results":"60","hashOfConfig":"54"},{"size":4148,"mtime":1610815065668,"results":"61","hashOfConfig":"54"},{"size":4702,"mtime":1610815065666,"results":"62","hashOfConfig":"54"},{"size":1097,"mtime":1611008656368,"results":"63","hashOfConfig":"54"},{"size":3935,"mtime":1610815065686,"results":"64","hashOfConfig":"54"},{"size":6241,"mtime":1610815065663,"results":"65","hashOfConfig":"54"},{"size":3771,"mtime":1610815065684,"results":"66","hashOfConfig":"54"},{"size":2537,"mtime":1610815065681,"results":"67","hashOfConfig":"54"},{"size":5006,"mtime":1610815065683,"results":"68","hashOfConfig":"54"},{"size":2561,"mtime":1610815065671,"results":"69","hashOfConfig":"54"},{"size":1757,"mtime":1610815065679,"results":"70","hashOfConfig":"54"},{"size":10731,"mtime":1610815065677,"results":"71","hashOfConfig":"54"},{"size":175,"mtime":1610815065672,"results":"72","hashOfConfig":"54"},{"size":3906,"mtime":1610815065675,"results":"73","hashOfConfig":"54"},{"size":18889,"mtime":1610815065674,"results":"74","hashOfConfig":"54"},{"size":3623,"mtime":1610815065656,"results":"75","hashOfConfig":"54"},{"size":3662,"mtime":1610815065654,"results":"76","hashOfConfig":"54"},{"size":811,"mtime":1610815065655,"results":"77","hashOfConfig":"54"},{"size":4155,"mtime":1610815065658,"results":"78","hashOfConfig":"54"},{"size":410,"mtime":1610913405422,"results":"79","hashOfConfig":"54"},{"size":249,"mtime":1610815065642,"results":"80","hashOfConfig":"54"},{"size":1335,"mtime":1611144496204,"results":"81","hashOfConfig":"54"},{"size":905,"mtime":1611143589071,"results":"82","hashOfConfig":"54"},{"size":365,"mtime":1610815065640,"results":"83","hashOfConfig":"54"},{"size":352,"mtime":1610815065634,"results":"84","hashOfConfig":"54"},{"size":1054,"mtime":1610815065617,"results":"85","hashOfConfig":"54"},{"size":5521,"mtime":1610815065614,"results":"86","hashOfConfig":"54"},{"size":7020,"mtime":1610815065618,"results":"87","hashOfConfig":"54"},{"size":5439,"mtime":1610815065615,"results":"88","hashOfConfig":"54"},{"size":229,"mtime":1610815065647,"results":"89","hashOfConfig":"54"},{"size":1443,"mtime":1610815065645,"results":"90","hashOfConfig":"54"},{"size":1290,"mtime":1610815065646,"results":"91","hashOfConfig":"54"},{"size":1567,"mtime":1610815065648,"results":"92","hashOfConfig":"54"},{"size":308,"mtime":1610918830834,"results":"93","hashOfConfig":"54"},{"size":717,"mtime":1611145957311,"results":"94","hashOfConfig":"54"},{"size":232,"mtime":1611006292868,"results":"95","hashOfConfig":"54"},{"size":990,"mtime":1611146039356,"results":"96","hashOfConfig":"54"},{"size":1217,"mtime":1611010478501,"results":"97","hashOfConfig":"54"},{"size":527,"mtime":1611007285569,"results":"98","hashOfConfig":"54"},{"size":148,"mtime":1611005162475,"results":"99","hashOfConfig":"54"},{"size":151,"mtime":1611005215286,"results":"100","hashOfConfig":"54"},{"size":148,"mtime":1611005192694,"results":"101","hashOfConfig":"54"},{"size":1599,"mtime":1611143374727,"results":"102","hashOfConfig":"54"},{"size":4513,"mtime":1611093579870,"results":"103","hashOfConfig":"54"},{"size":1794,"mtime":1611143281987,"results":"104","hashOfConfig":"54"},{"size":1207,"mtime":1611087223249,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"fnm01u",{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\index.js",[],["217","218"],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\App.js",["219"],"import React, { Fragment } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Search from './components/Search';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n//Patient Screen\r\nimport PatientLoginScreen from './screens/patient/PatientLoginScreen';\r\nimport PatientRegisterScreen from './screens/patient/PatientRegisterScreen';\r\nimport PatientProfileScreen from './screens/patient/PatientProfileScreen';\r\n\r\n//componenets\r\nimport Home from './components/Home'\r\nimport Contact from './components/Contact'\r\nimport Services from './components/Services'\r\nimport Apropos from './components/Apropos'\r\n\r\n//Doctor Screen\r\nimport DoctorLoginScreen from './screens/doctor/DoctorLoginScreen';\r\nimport DoctorRegisterScreen from './screens/doctor/DoctorRegisterScreen';\r\nimport DoctorSpaceScreen from './screens/doctor/DoctorSpaceScreen';\r\nimport DoctorProfileScreen from './screens/doctor/DoctorProfileScreen';\r\nimport DoctorPatientsScreen from './screens/doctor/DoctorPatientsScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport DoctorInfoScreen from './screens/DoctorInfoScreen';\r\nimport RdvScreen from './screens/RdvScreen';\r\nimport PayementScreen from './screens/PayementScreen';\r\nimport PlaceOrder from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport PatientRdvScreen from './screens/patient/PatientRdvScreen';\r\nimport DoctorRdvScreen from './screens/doctor/DoctorRdvScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Fragment>\r\n        <Header />\r\n        <main className='py-3'>\r\n          <Container>\r\n            <Route path='/' component={Home} exact />\r\n            <Route path='/doctor/:id' component={DoctorInfoScreen} />\r\n            <Route path='/rdvinfo' component={RdvScreen} />\r\n            <Route path='/payment' component={PayementScreen} />\r\n            <Route path='/placeorder' component={PlaceOrder} />\r\n            <Route path='/rdv/:id' component={OrderScreen} />\r\n\r\n            <Route path='/patient/login' component={PatientLoginScreen} />\r\n            <Route path='/patient/register' component={PatientRegisterScreen} />\r\n            <Route path='/patient/profile' component={PatientProfileScreen} />\r\n            <Route path='/patient/rdvs' component={PatientRdvScreen} />\r\n\r\n            <Route path='/doctors/login' component={DoctorLoginScreen} />\r\n            <Route path='/medcins' component={HomeScreen} />\r\n            <Route path='/doctors/register' component={DoctorRegisterScreen} />\r\n            <Route path='/doctors/doctorspace' component={DoctorSpaceScreen} />\r\n            <Route path='/doctors/profile' component={DoctorProfileScreen} />\r\n            <Route path='/doctors/patients' component={DoctorPatientsScreen} />\r\n            <Route path='/doctors/rdvs' component={DoctorRdvScreen} />\r\n\r\n            <Route path='/contact' component={Contact} />\r\n            <Route path='/services' component={Services} />\r\n            <Route path='/apropos' component={Apropos} />\r\n\r\n          </Container>\r\n        </main>\r\n        <Footer />\r\n      </Fragment>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\store.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Footer.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Header.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\DoctorInfoScreen.js",["220"],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\PayementScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\RdvScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientRegisterScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\OrderScreen.js",["221"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Col, Button, ListGroup, Row, Image, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  patientGetRdvDetails,\r\n  doctorGetRdvDetails,\r\n  payRdv,\r\n  deliverRdv,\r\n} from '../actions/rdvActions';\r\nimport axios from 'axios';\r\nimport { RDV_PAY_RESET } from '../constants/rdvConstants';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const rdvId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const rdvDetails = useSelector(state => state.rdvDetails);\r\n  const { loading, error, rdv } = rdvDetails;\r\n\r\n  const rdvPay = useSelector(state => state.rdvPay);\r\n  const { loading: loadingPay, success: successPay } = rdvPay;\r\n\r\n  const rdvDeliver = useSelector(state => state.rdvDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = rdvDeliver;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!rdv._id || successPay || successDeliver) {\r\n      dispatch({ type: RDV_PAY_RESET });\r\n      if (userInfo) {\r\n        dispatch(patientGetRdvDetails(rdvId));\r\n      } else {\r\n        dispatch(doctorGetRdvDetails(rdvId));\r\n      }\r\n    } else if (!rdv.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, rdvId, rdv, successPay, history, successDeliver, userInfo]);\r\n\r\n  const successPaymentHandler = paymentResult => {\r\n    dispatch(payRdv(rdvId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverRdv(rdv));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Date de rendez-vous</h2>\r\n                <p>\r\n                  <strong>Date: </strong> {rdv.rdvDate}\r\n                </p>\r\n                {rdv.isDelivered ? (\r\n                  <Message variant='success'>\r\n                    Delivered on {rdv.deliveredAt}\r\n                  </Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Delivered</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <p>\r\n                  <strong>Method: </strong> {rdv.paymentMethod}\r\n                </p>\r\n                {rdv.isPaid ? (\r\n                  <Message variant='success'>Paid on {rdv.paidAt}</Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Paid</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Reference du rendez-vous</h2>\r\n\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>{rdv._id}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Resume de rdv</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Type de consultation</Col>\r\n                    <Col>{rdv.typeConsultation}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Prix de consultation</Col>\r\n                    <Col>{rdv.rdvPrix} MAD</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>{rdv.taxPrice} MAD</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>{rdv.totalPrice} MAD</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  {error && <Message variant='danger'>{error}</Message>}\r\n                </ListGroup.Item>\r\n\r\n                {!rdv.isPaid && (\r\n                  <ListGroup.Item>\r\n                    {loadingPay && <Loader />}\r\n                    {!sdkReady ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <PayPalButton\r\n                        amount={rdv.totalPrice}\r\n                        onSuccess={successPaymentHandler}\r\n                      />\r\n                    )}\r\n                  </ListGroup.Item>\r\n                )}\r\n                {loadingDeliver && <Loader />}\r\n                {doctorInfo && rdv.isPaid && !rdv.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientRdvScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientLoginScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\patient\\PatientProfileScreen.js",["222","223"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\nconst PatientProfileScreen = ({ location, history }) => {\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/patient/login');\r\n    } else {\r\n      if (!user.nom) {\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setNom(user.nom);\r\n        setPrenom(user.prenom);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({ id: user._id, nom, prenom, email, password })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {userInfo && <h1>Bonjour {userInfo.prenom} </h1>}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/rdvs'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes rdvs</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/patient/agenda'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon agenda</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='nom'>\r\n              <Form.Label>Nom </Form.Label>\r\n              <Form.Control\r\n                type='nom'\r\n                placeholder='Enter votre nom'\r\n                value={nom}\r\n                onChange={e => setNom(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='prenom'>\r\n              <Form.Label>Nom complet</Form.Label>\r\n              <Form.Control\r\n                type='prenom'\r\n                placeholder='Enter votre prénom'\r\n                value={prenom}\r\n                onChange={e => setPrenom(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientProfileScreen;\r\n","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorLoginScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorSpaceScreen.js",["224","225","226","227","228","229","230","231","232","233","234"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Row, Col, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst DoctorSpaceScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  const doctorDetails = useSelector(state => state.doctorDetails);\r\n  const { loading, error, doctor } = doctorDetails;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {/* {doctorInfo && (\r\n            <h1>\r\n              Bonjour {doctorInfo.titre} {doctorInfo.nom}{' '}\r\n            </h1>\r\n          )} */}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/patients'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes patients</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/rdvs'>\r\n                <Nav.Link className='btn btn-light my-3'>\r\n                  Mes rendez-vous\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorSpaceScreen;\r\n","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorRegisterScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorPatientsScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorRdvScreen.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\screens\\doctor\\DoctorProfileScreen.js",["235","236"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Row, Col, Nav, Button, Card } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getDoctorDetails,\r\n  updateDoctorProfile,\r\n} from '../../actions/doctorActions';\r\nimport axios from 'axios';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\nimport LocationMarker from '../../components/LocationMarker';\r\n\r\nconst DoctorProfileScreen = ({ location, history }) => {\r\n  const [titre, setTitre] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [nom, setNom] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [specialite, setSpecialite] = useState('');\r\n  const [addressCabinet, setAddressCabinet] = useState('');\r\n  const [ville, setVille] = useState('');\r\n  const [phoneCabinet, setPhoneCabinet] = useState('');\r\n  const [phonePersonel, setPhonePersonel] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [prixConsultation, setPrixConsultation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [diplomesEtFormations, setDiplomesEtFormations] = useState('');\r\n  const [informationsPratiques, setInformationsPratiques] = useState('');\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const doctorDetails = useSelector(state => state.doctorDetails);\r\n  const { loading, error, doctor } = doctorDetails;\r\n\r\n  const doctorLogin = useSelector(state => state.doctorLogin);\r\n  const { doctorInfo } = doctorLogin;\r\n\r\n  const doctorUpdateProfile = useSelector(state => state.doctorUpdateProfile);\r\n  const { success } = doctorUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!doctorInfo) {\r\n      history.push('/doctors/login');\r\n    } else {\r\n      if (!doctor.nom) {\r\n        dispatch(getDoctorDetails('profile'));\r\n      } else {\r\n        setTitre(doctor.titre);\r\n        setPrenom(doctor.prenom);\r\n        setNom(doctor.nom);\r\n        setEmail(doctor.email);\r\n        setSpecialite(doctor.specialite);\r\n        setAddressCabinet(doctor.addressCabinet);\r\n        setVille(doctor.ville);\r\n        setPhoneCabinet(doctor.phoneCabinet);\r\n        setPhonePersonel(doctor.phonePersonel);\r\n        setImage(doctor.image);\r\n        setPrixConsultation(doctor.prixConsultation);\r\n        setDiplomesEtFormations(doctor.diplomesEtFormations);\r\n        setDescription(doctor.description);\r\n        setInformationsPratiques(doctor.informationsPratiques);\r\n      }\r\n    }\r\n  }, [dispatch, history, doctorInfo, doctor]);\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      dispatch(\r\n        updateDoctorProfile({\r\n          id: doctor._id,\r\n          titre,\r\n          nom,\r\n          prenom,\r\n          email,\r\n          password,\r\n          specialite,\r\n          addressCabinet,\r\n          ville,\r\n          phoneCabinet,\r\n          phonePersonel,\r\n          image,\r\n          prixConsultation,\r\n          diplomesEtFormations,\r\n          description,\r\n          informationsPratiques,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {/* {doctorInfo && (\r\n            <h1>\r\n              Bonjour {doctorInfo.titre} {doctorInfo.nom}{' '}\r\n            </h1>\r\n          )} */}\r\n          <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/profile'>\r\n                <Nav.Link className='btn btn-light my-3'>Mon profile</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/patients'>\r\n                <Nav.Link className='btn btn-light my-3'>Mes patients</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <LinkContainer to='/doctors/rdvs'>\r\n                <Nav.Link className='btn btn-light my-3'>\r\n                  Mes rendez-vous\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {loading && <Loader />}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        <>\r\n          {' '}\r\n          <Col md={3}>\r\n            {' '}\r\n            <Card className='my-3 p-3 rounded'>\r\n              <Card.Img\r\n                src={doctor.image}\r\n                variant='top'\r\n                className='image-profile'\r\n              />\r\n              <Form.Group controlId='image'>\r\n                <Form.Label>Image</Form.Label>\r\n                <Form.File\r\n                  id='image-file'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n              <Card.Body>\r\n                <Card.Title as='div'>\r\n                  <strong>\r\n                    {doctor.titre}\r\n                    {doctor.prenom}\r\n                    {doctor.nom}\r\n                  </strong>\r\n                </Card.Title>\r\n                <Card.Text as='div'>\r\n                  {/* <Rating value={product.rating} text={`$ reviews`} /> */}\r\n                </Card.Text>\r\n                <Card.Text as='h3'>{doctor.phone}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col md={9}>\r\n            <h4>INFORMATIONS GENERALES ET COORDONNEES</h4>\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='titre'>\r\n                <Form.Label>Titre</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={titre}\r\n                  onChange={e => setTitre(e.target.value)}\r\n                >\r\n                  <option>Dr. </option>\r\n                  <option>Pr.</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='prenom'>\r\n                  <Form.Label>Prenom</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    value={prenom}\r\n                    onChange={e => {\r\n                      setPrenom(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='nom'>\r\n                  <Form.Label>Nom</Form.Label>\r\n                  <Form.Control\r\n                    type='name'\r\n                    value={nom}\r\n                    onChange={e => {\r\n                      setNom(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Adresse Email</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  value={email}\r\n                  onChange={e => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <hr />\r\n              <Form.Group controlId='specialite'>\r\n                <Form.Label>Specialite</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={specialite}\r\n                  onChange={e => {\r\n                    setSpecialite(e.target.value);\r\n                  }}\r\n                >\r\n                  <option>Choisissez votre specialité</option>\r\n                  <option>Orthodontiste</option>\r\n                  <option>Psychiatre</option>\r\n                  <option>Cardiologue</option>\r\n                  <option>Chirurgien digestif - viscéral</option>\r\n                  <option>Opticien</option>\r\n                  <option>Gastrologue</option>\r\n                  <option>entérologue</option>\r\n                  <option>Chirurgien général</option>\r\n                  <option>Chirurgien dentiste</option>\r\n                  <option>Kinésithérapeute</option>\r\n                  <option>Urologue et chirurgien urologue</option>\r\n                  <option>Oto-rhino-laryngologue</option>\r\n                  <option>Endocrinologue - maladies métaboliques</option>\r\n                  <option>Ophtalmologue</option>\r\n                  <option>Médecin Ostéopathe</option>\r\n                  <option>Gériatre</option>\r\n                  <option>Chirurgien esthétique</option>\r\n                  <option>Dermatologue</option>\r\n                  <option>Pédiatre</option>\r\n                  <option>Gynécologue obstétricien</option>\r\n                  <option>Anatomo-pathologiste</option>\r\n                  <option>Rhumatologue</option>\r\n                  <option>Orthophoniste</option>\r\n                  <option>Médecin généraliste</option>\r\n                  <option>Psychologue</option>\r\n                  <option>Nutritionniste</option>\r\n                  <option>Médecin interne</option>\r\n                  <option>Infirmier</option>\r\n                  <option>Chirurgien cardio-vasculaire</option>\r\n                  <option>Pneumologue</option>\r\n                  <option>Neurochirurgien</option>\r\n                  <option>Chirurgien orthopédiste et traumatologue</option>\r\n                  <option>Neuropsychiatre</option>\r\n                  <option>Génétique médicale</option>\r\n                  <option>Sexologue</option>\r\n                  <option>Neurologue</option>\r\n                  <option>Médecin biologiste</option>\r\n                  <option>Stomatologue et chirurgien maxillo-faciale</option>\r\n                  <option>Gynécologue sexologue</option>\r\n                  <option>Cancérologue</option>\r\n                  <option>Algologue</option>\r\n                  <option>Chirurgien réparateur et plastique</option>\r\n                  <option>Allergologue</option>\r\n                  <option>Médecin sportif</option>\r\n                  <option>Néphrologue</option>\r\n                  <option>Chirurgien pédiatre</option>\r\n                  <option>\r\n                    Médecin physique et réadaptation fonctionnelle\r\n                  </option>\r\n                  <option>Gérontologue</option>\r\n                  <option>Podologue</option>\r\n                  <option>Chirurgien hépato-biliaire et digestive</option>\r\n                  <option>Oncologue médicale</option>\r\n                  <option>Médecin légal et de travail</option>\r\n                  <option>Pédodontiste</option>\r\n                  <option>Acupuncteur</option>\r\n                  <option>Radiothérapeute</option>\r\n                  <option>Angiologue</option>\r\n                  <option>Médecin morphologique et anti-âge</option>\r\n                  <option>Diététicien</option>\r\n                  <option>Radiologue</option>\r\n                  <option>Psychomotricité</option>\r\n                  <option>Chirurgien cancérologue</option>\r\n                  <option>Anesthésiste-réanimateur</option>\r\n                  <option>Médecine nucléaire</option>\r\n                  <option>Homéopathe</option>\r\n                  <option>Orthopédiste dento-faciale</option>\r\n                  <option>Pharmacologue</option>\r\n                  <option>Parodontologue</option>\r\n                  <option>infectiologue</option>\r\n                  <option>Odontologue chirurgicale</option>\r\n                  <option>Chirurgien thoracique</option>\r\n                  <option>Biologiste vétérinaire</option>\r\n                  <option>Réanimateur</option>\r\n                  <option>Médecin urgentiste</option>\r\n                  <option>Autre</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='AddressCabinet'>\r\n                  <Form.Label>Numero et rue du cabinet</Form.Label>\r\n                  <Form.Control\r\n                    value={addressCabinet}\r\n                    onChange={e => {\r\n                      setAddressCabinet(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='city'>\r\n                  <Form.Label>Ville</Form.Label>\r\n                  <Form.Control\r\n                    value={ville}\r\n                    onChange={e => {\r\n                      setVille(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              {doctorInfo.location.coordinates ? (\r\n                <Form.Group className='map' as={Col} md='12'>\r\n                  <GoogleMapReact\r\n                    bootstrapURLKeys={{\r\n                      key: 'AIzaSyD9yHl3vgj69oEh9DN35jPPtc0bhksyK5A',\r\n                    }}\r\n                    defaultCenter={{\r\n                      lat: 33.5731,\r\n                      lng: -7.5898,\r\n                    }}\r\n                    defaultZoom={6}\r\n                  >\r\n                    <LocationMarker\r\n                      lat={doctorInfo.location.coordinates[1]}\r\n                      lng={doctorInfo.location.coordinates[0]}\r\n                    ></LocationMarker>\r\n                  </GoogleMapReact>\r\n                </Form.Group>\r\n              ) : (\r\n                <Form.Group className='map' as={Col} md='12'>\r\n                  <GoogleMapReact\r\n                    bootstrapURLKeys={{\r\n                      key: 'AIzaSyD9yHl3vgj69oEh9DN35jPPtc0bhksyK5A',\r\n                    }}\r\n                    defaultCenter={{\r\n                      lat: 33.5731,\r\n                      lng: -7.5898,\r\n                    }}\r\n                    defaultZoom={6}\r\n                  ></GoogleMapReact>\r\n                </Form.Group>\r\n              )}\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='phoneCabinet'>\r\n                  <Form.Label>Numéro de Téléphone (cabinet)</Form.Label>\r\n                  <Form.Control\r\n                    value={phoneCabinet}\r\n                    onChange={e => {\r\n                      setPhoneCabinet(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='phonePersonel'>\r\n                  <Form.Label>Phone personnel</Form.Label>\r\n                  <Form.Control\r\n                    value={phonePersonel}\r\n                    onChange={e => {\r\n                      setPhonePersonel(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md='12' controlId='prixConsultation'>\r\n                  <Form.Label>Prix de la consultation</Form.Label>\r\n                  <Form.Control\r\n                    value={prixConsultation}\r\n                    onChange={e => {\r\n                      setPrixConsultation(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='12' controlId='diplomesEtFormations'>\r\n                  <Form.Label>Diplomes et formations</Form.Label>\r\n                  <Form.Control\r\n                    value={diplomesEtFormations}\r\n                    onChange={e => {\r\n                      setDiplomesEtFormations(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n\r\n                  <Form.Group as={Col} md='12' controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      rows={3}\r\n                      value={description}\r\n                      onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md='12'\r\n                    controlId='informationsPratiques'\r\n                  >\r\n                    <Form.Label>Informations pratiques</Form.Label>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      rows={3}\r\n                      value={informationsPratiques}\r\n                      onChange={e => setInformationsPratiques(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <hr />\r\n\r\n              <h4>CONFIDENTIALITE</h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col} md='6' controlId='password'>\r\n                  <Form.Label>Mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter votre mot de passe'\r\n                    value={password}\r\n                    onChange={e => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md='6' controlId='confirmPassword'>\r\n                  <Form.Label>Confirmer mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirmer votre mot de passe'\r\n                    value={confirmPassword}\r\n                    onChange={e => {\r\n                      setConfirmPassword(e.target.value);\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <hr />\r\n              <Button type='submit' variant='primary'>\r\n                Enregister les modifications\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorProfileScreen;\r\n","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\rdvReducers.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\doctorReducers.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\rdvInfoReducers.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\reducers\\userReducers.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Loader.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Message.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\DoctorCard.js",["237","238"],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\LocationMarker.js",["239"],"import React from 'react';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport mapPin from '@iconify-icons/fa-solid/map-pin';\r\n\r\nconst LocationMarker = ({ lat, lng, onClick }) => {\r\n  return (\r\n    <div className='location-marker' onClick={onClick}>\r\n      <Icon icon={mapPin} className='map-pin' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\FormContainer.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\rdvInfoActions.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\doctorActions.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\userActions.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\actions\\rdvActions.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\rdvInfoConstants.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\doctorConstants.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\rdvConstants.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\constants\\userConstants.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\search.js",["240"],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Search.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Home.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Header_home.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Navbar.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\FeatureItem.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\contact.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\services.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\apropos.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Apropos.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Contact.js",["241","242"],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\Services.js",[],"D:\\INPT\\e-heakth\\E-health-mono\\frontend\\src\\components\\FooterNav.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"247","severity":1,"message":"251","line":1,"column":28,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"252","line":3,"column":39,"nodeType":"249","messageId":"250","endLine":3,"endColumn":44},{"ruleId":"247","severity":1,"message":"253","line":2,"column":34,"nodeType":"249","messageId":"250","endLine":2,"endColumn":39},{"ruleId":"247","severity":1,"message":"254","line":8,"column":10,"nodeType":"249","messageId":"250","endLine":8,"endColumn":35},{"ruleId":"247","severity":1,"message":"255","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"256","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":14},{"ruleId":"247","severity":1,"message":"257","line":4,"column":16,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"258","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":15},{"ruleId":"247","severity":1,"message":"259","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":14},{"ruleId":"247","severity":1,"message":"260","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":21},{"ruleId":"247","severity":1,"message":"261","line":11,"column":9,"nodeType":"249","messageId":"250","endLine":11,"endColumn":17},{"ruleId":"247","severity":1,"message":"262","line":14,"column":11,"nodeType":"249","messageId":"250","endLine":14,"endColumn":21},{"ruleId":"247","severity":1,"message":"263","line":17,"column":11,"nodeType":"249","messageId":"250","endLine":17,"endColumn":18},{"ruleId":"247","severity":1,"message":"264","line":17,"column":20,"nodeType":"249","messageId":"250","endLine":17,"endColumn":25},{"ruleId":"247","severity":1,"message":"265","line":17,"column":27,"nodeType":"249","messageId":"250","endLine":17,"endColumn":33},{"ruleId":"247","severity":1,"message":"255","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"247","severity":1,"message":"266","line":35,"column":10,"nodeType":"249","messageId":"250","endLine":35,"endColumn":17},{"ruleId":"247","severity":1,"message":"251","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"256","line":3,"column":16,"nodeType":"249","messageId":"250","endLine":3,"endColumn":20},{"ruleId":"247","severity":1,"message":"267","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"247","severity":1,"message":"268","line":3,"column":26,"nodeType":"249","messageId":"250","endLine":3,"endColumn":29},{"ruleId":"247","severity":1,"message":"269","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"270","severity":1,"message":"271","line":93,"column":18,"nodeType":"272","endLine":93,"endColumn":234},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Image' is defined but never used.","'Table' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'FormContainer' is defined but never used.","'dispatch' is assigned a value but never used.","'doctorInfo' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'doctor' is assigned a value but never used.","'message' is assigned a value but never used.","'InlineIcon' is defined but never used.","'Col' is defined but never used.","'FeatureItem' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]